import { useNavigate, useParams } from "react-router-dom";
import { useEffect, useState } from "react";
import AlarmSetting from "./AlarmSetting";
import { useDispatch, useSelector } from "react-redux";
import { fetchWebhook } from "../store/slices/webhookSlice";
import { AppDispatch, RootState } from "../store/store";

export default function ProjectNavBar() {
  const navigate = useNavigate();
  const { projectId } = useParams();
  const [isAlarmSettingOpen, setIsAlarmSettingOpen] = useState(false);

  const dispatch = useDispatch<AppDispatch>();
  const { webhookData, isLoading } = useSelector(
    (state: RootState) => state.webhook
  );

  useEffect(() => {
    if (isAlarmSettingOpen && projectId) {
      dispatch(fetchWebhook(Number(projectId)));
    }
  }, [isAlarmSettingOpen, projectId, dispatch]);

  const isActive = (path: string) => {
    return window.location.pathname.includes(path);
  };

  return (
    <div>
      <nav className="w-full inline-flex justify-end items-center gap-4 py-4">
        <button
          onClick={() => navigate(`/project/${projectId}`)}
          className={`flex justify-start items-center gap-2 cursor-pointer ${
            isActive("/project/") &&
            !isActive("/archives") &&
            !isActive("/report") &&
            !isActive("/projectsetting")
              ? "text-lime-600 font-bold"
              : "text-slate-400"
          }`}
        >
          <div
            className={`w-4 h-4 ${
              isActive("/project/") &&
              !isActive("/archives") &&
              !isActive("/report") &&
              !isActive("/projectsetting")
                ? "text-lime-600"
                : "text-slate-400"
            }`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
            >
              <path d="M4 13H10C10.55 13 11 12.55 11 12V4C11 3.45 10.55 3 10 3H4C3.45 3 3 3.45 3 4V12C3 12.55 3.45 13 4 13ZM4 21H10C10.55 21 11 20.55 11 20V16C11 15.45 10.55 15 10 15H4C3.45 15 3 15.45 3 16V20C3 20.55 3.45 21 4 21ZM14 21H20C20.55 21 21 20.55 21 20V12C21 11.45 20.55 11 20 11H14C13.45 11 13 11.45 13 12V20C13 20.55 13.45 21 14 21ZM13 4V8C13 8.55 13.45 9 14 9H20C20.55 9 21 8.55 21 8V4C21 3.45 20.55 3 20 3H14C13.45 3 13 3.45 13 4Z" />
            </svg>
          </div>
          <span className="text-[12px]">Dashboard</span>
        </button>

        <button
          onClick={() => navigate(`/project/${projectId}/archives`)}
          className={`flex justify-start items-center gap-2 cursor-pointer ${
            isActive("/archives") ? "text-lime-600 font-bold" : "text-slate-400"
          }`}
        >
          <div
            className={`w-4 h-4 ${
              isActive("/archives") ? "text-lime-600" : "text-slate-400"
            }`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
            >
              <path d="M5 21C4.45 21 3.97933 20.8043 3.588 20.413C3.19667 20.0217 3.00067 19.5507 3 19V6.52501C3 6.29167 3.03767 6.06667 3.113 5.85001C3.18833 5.63334 3.30067 5.43334 3.45 5.25001L4.7 3.72501C4.88333 3.49167 5.11233 3.31234 5.387 3.18701C5.66167 3.06167 5.94933 2.99934 6.25 3.00001H17.75C18.05 3.00001 18.3377 3.06267 18.613 3.18801C18.8883 3.31334 19.1173 3.49234 19.3 3.72501L20.55 5.25001C20.7 5.43334 20.8127 5.63334 20.888 5.85001C20.9633 6.06667 21.0007 6.29167 21 6.52501V19C21 19.55 20.8043 20.021 20.413 20.413C20.0217 20.805 19.5507 21.0007 19 21H5ZM5.4 6.00001H18.6L17.75 5.00001H6.25L5.4 6.00001ZM12 10C11.7167 10 11.4793 10.096 11.288 10.288C11.0967 10.48 11.0007 10.7173 11 11V14.2L10.1 13.3C9.91667 13.1167 9.68333 13.025 9.4 13.025C9.11667 13.025 8.88333 13.1167 8.7 13.3C8.51667 13.4833 8.425 13.7167 8.425 14C8.425 14.2833 8.51667 14.5167 8.7 14.7L11.3 17.3C11.5 17.5 11.7333 17.6 12 17.6C12.2667 17.6 12.5 17.5 12.7 17.3L15.3 14.7C15.4833 14.5167 15.575 14.2833 15.575 14C15.575 13.7167 15.4833 13.4833 15.3 13.3C15.1167 13.1167 14.8833 13.025 14.6 13.025C14.3167 13.025 14.0833 13.1167 13.9 13.3L13 14.2V11C13 10.7167 12.904 10.4793 12.712 10.288C12.52 10.0967 12.2827 10.0007 12 10Z" />
            </svg>
          </div>
          <span className="text-[12px]">Archive</span>
        </button>

        <button
          onClick={() => navigate(`/report/${projectId}`)}
          className={`flex justify-start items-center gap-2 cursor-pointer ${
            isActive("/report") ? "text-lime-600 font-bold" : "text-slate-400"
          }`}
        >
          <div
            className={` ${
              isActive("/report") ? "text-lime-600" : "text-slate-400"
            }`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width={"12px"}
              height={"12px"}
              viewBox="0 0 18 18"
              fill="currentColor"
            >
              <path d="M4.8125 15.2H10.4375C10.7031 15.2 10.9258 15.109 11.1055 14.9269C11.2852 14.7448 11.375 14.5192 11.375 14.25C11.375 13.9808 11.2852 13.7552 11.1055 13.5731C10.9258 13.391 10.7031 13.3 10.4375 13.3H4.8125C4.54688 13.3 4.32422 13.391 4.14453 13.5731C3.96484 13.7552 3.875 13.9808 3.875 14.25C3.875 14.5192 3.96484 14.7448 4.14453 14.9269C4.32422 15.109 4.54688 15.2 4.8125 15.2ZM4.8125 11.4H10.4375C10.7031 11.4 10.9258 11.309 11.1055 11.1269C11.2852 10.9448 11.375 10.7192 11.375 10.45C11.375 10.1808 11.2852 9.95521 11.1055 9.77312C10.9258 9.59104 10.7031 9.5 10.4375 9.5H4.8125C4.54688 9.5 4.32422 9.59104 4.14453 9.77312C3.96484 9.95521 3.875 10.1808 3.875 10.45C3.875 10.7192 3.96484 10.9448 4.14453 11.1269C4.32422 11.309 4.54688 11.4 4.8125 11.4ZM2 19C1.48438 19 1.04297 18.814 0.675781 18.4419C0.308594 18.0698 0.125 17.6225 0.125 17.1V1.9C0.125 1.3775 0.308594 0.930208 0.675781 0.558125C1.04297 0.186042 1.48438 0 2 0H8.72656C8.97656 0 9.21484 0.0475 9.44141 0.1425C9.66797 0.2375 9.86719 0.372083 10.0391 0.54625L14.5859 5.15375C14.7578 5.32792 14.8906 5.52979 14.9844 5.75938C15.0781 5.98896 15.125 6.23042 15.125 6.48375V17.1C15.125 17.6225 14.9414 18.0698 14.5742 18.4419C14.207 18.814 13.7656 19 13.25 19H2ZM8.5625 5.7C8.5625 5.96917 8.65234 6.19479 8.83203 6.37687C9.01172 6.55896 9.23438 6.65 9.5 6.65H13.25L8.5625 1.9V5.7Z" />
            </svg>
          </div>
          <span className="text-[12px]">Report</span>
        </button>

        <button
          onClick={() => {
            setIsAlarmSettingOpen(true);
          }}
          className={`flex justify-start items-center gap-2 cursor-pointer ${
            isAlarmSettingOpen ? "text-lime-600 font-bold" : "text-slate-400"
          }`}
        >
          <div
            className={`${
              isAlarmSettingOpen ? "text-lime-600" : "text-slate-400"
            }`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width={"12px"}
              height={"12px"}
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path d="M9.01576 21.004C8.54307 21.004 8.13603 20.8464 7.79464 20.5313C7.45326 20.2162 7.24755 19.831 7.17752 19.3759L6.94118 17.6427C6.71359 17.5551 6.49913 17.4501 6.29779 17.3275C6.09646 17.205 5.89951 17.0737 5.70693 16.9336L4.07878 17.6164C3.64111 17.809 3.20343 17.8265 2.76576 17.6689C2.32808 17.5114 1.98669 17.2313 1.7416 16.8286L0.507353 14.6752C0.262255 14.2726 0.192227 13.8436 0.297269 13.3885C0.402311 12.9333 0.638655 12.5569 1.0063 12.2593L2.39811 11.2088C2.3806 11.0863 2.37185 10.9681 2.37185 10.8543V10.1453C2.37185 10.0315 2.3806 9.91332 2.39811 9.79077L1.0063 8.74035C0.638655 8.44273 0.402311 8.06633 0.297269 7.61115C0.192227 7.15597 0.262255 6.72705 0.507353 6.32439L1.7416 4.17103C1.98669 3.76836 2.32808 3.48825 2.76576 3.33069C3.20343 3.17313 3.64111 3.19063 4.07878 3.38321L5.70693 4.06598C5.89951 3.92593 6.10084 3.79463 6.31092 3.67208C6.52101 3.54953 6.73109 3.44449 6.94118 3.35695L7.17752 1.62376C7.24755 1.16857 7.45326 0.783421 7.79464 0.468295C8.13603 0.153168 8.54307 -0.00439453 9.01576 -0.00439453H11.4842C11.9569 -0.00439453 12.364 0.153168 12.7054 0.468295C13.0467 0.783421 13.2525 1.16857 13.3225 1.62376L13.5588 3.35695C13.7864 3.44449 14.0009 3.54953 14.2022 3.67208C14.4035 3.79463 14.6005 3.92593 14.7931 4.06598L16.4212 3.38321C16.8589 3.19063 17.2966 3.17313 17.7342 3.33069C18.1719 3.48825 18.5133 3.76836 18.7584 4.17103L19.9926 6.32439C20.2377 6.72705 20.3078 7.15597 20.2027 7.61115C20.0977 8.06633 19.8613 8.44273 19.4937 8.74035L18.1019 9.79077C18.1194 9.91332 18.1282 10.0315 18.1282 10.1453V10.8543C18.1282 10.9681 18.1106 11.0863 18.0756 11.2088L19.4674 12.2593C19.8351 12.5569 20.0714 12.9333 20.1765 13.3885C20.2815 13.8436 20.2115 14.2726 19.9664 14.6752L18.7059 16.8286C18.4608 17.2313 18.1194 17.5114 17.6817 17.6689C17.244 17.8265 16.8064 17.809 16.3687 17.6164L14.7931 16.9336C14.6005 17.0737 14.3992 17.205 14.1891 17.3275C13.979 17.4501 13.7689 17.5551 13.5588 17.6427L13.3225 19.3759C13.2525 19.831 13.0467 20.2162 12.7054 20.5313C12.364 20.8464 11.9569 21.004 11.4842 21.004H9.01576ZM10.3025 14.1763C11.3179 14.1763 12.1845 13.8174 12.9023 13.0996C13.6201 12.3818 13.979 11.5152 13.979 10.4998C13.979 9.4844 13.6201 8.61781 12.9023 7.90002C12.1845 7.18223 11.3179 6.82334 10.3025 6.82334C9.26961 6.82334 8.39863 7.18223 7.6896 7.90002C6.98057 8.61781 6.62605 9.4844 6.62605 10.4998C6.62605 11.5152 6.98057 12.3818 7.6896 13.0996C8.39863 13.8174 9.26961 14.1763 10.3025 14.1763Z" />
            </svg>
          </div>
          <span className="text-[12px]">Setting</span>
        </button>
      </nav>

      <AlarmSetting
        isOpen={isAlarmSettingOpen}
        onClose={() => setIsAlarmSettingOpen(false)}
        webhookData={webhookData}
      />
    </div>
  );
}
